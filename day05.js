const data = ['BFFFFFFRLL', 'FFBFBBBRLL', 'FBBFBFBRLR', 'BBFBBBBLLL', 'BBFBBBBLLR', 'BBBFBBBLLR', 'FFBBBFBRLR', 'BBFBFBFLRL', 'FBBFFBBLRL', 'BBBFBBFRRL', 'BBFBBFFRRL', 'BFBBFBFLRL', 'BBFFFBBRLL', 'FBFFFBBLLR', 'FBFBFBFLRR', 'FBBFBFFRLL', 'FFBBFFFRRR', 'BFBFBFBRLL', 'FBBFFBBRLL', 'BBBFFBBRLL', 'BFBFFFFLLR', 'FBBBBFBRRR', 'BBFBBFFLRR', 'BFFBFBFRRR', 'FBFBBBBRLR', 'BFBFBFFRLL', 'BFFFFFBRLL', 'FBBBFBFLLR', 'BFFBFBBRRR', 'BFFBBFBLLR', 'FBBBFFBLLL', 'BFFFBFBLRR', 'FFFFBFFLRR', 'BBFFFBFLLR', 'FBFBFFFLLR', 'FBFFFFFLLL', 'FFFFFFBRLL', 'BFFBFBBLRR', 'BFBFFBBLRR', 'BFFBFFBRLR', 'FFBFBBBLLR', 'FBFFFBFRRR', 'BFBFBFFRLR', 'BBBBFFBRRR', 'FBBFBBBLLL', 'FBBBBFBLRR', 'BFBBFFFRRL', 'FBBBBBBLRL', 'FBBFFFFLLL', 'FFBBBFFLLR', 'FBBBBBBRRR', 'BBBBFFBRLR', 'BBBFBFBLRL', 'FFBFFBFLLL', 'FBBBBBFLLL', 'FFBBBBBRLR', 'FBBFFFFLRL', 'BBFBBFBLLR', 'FFFBBFFRLR', 'FFFBBBFLLL', 'BFFFFFFLRL', 'BFFFBFFLRL', 'FBBFFFFRLR', 'FBFFFBBLLL', 'FFFFFBFRLR', 'BBBBFBFLLL', 'FBFBFFBLLR', 'FFBFBFBRLR', 'FBBBFBBLLR', 'FFBBBBFRLR', 'FBBBFBBRLL', 'FFFBFBFLLL', 'FFFFFBFRRL', 'FFFBFFBLRR', 'BFBFBBFRLL', 'BFBFFFBLLL', 'FFFBFBFRLL', 'FBFBBBFRLL', 'FFFBFBFLLR', 'BFBBFBFRRL', 'BBFFBFFRLR', 'FFFBBFFRLL', 'BBBBFFFLRL', 'BFFBFBBLLL', 'BBFFFFFLRL', 'BBFFBBBRLL', 'FFBFFFFLRR', 'FFBBFFFRLR', 'BBFFBBBRLR', 'FBFBFFBRRL', 'FFFFBBBLRL', 'BBFBFFFRRL', 'BFBBBFBRRL', 'FFBFBFBLRR', 'BBBFBFFRLR', 'BFBBBBBRRL', 'FBFFFFFLRR', 'BFFFFFBLRR', 'FFBBBFBLLL', 'FBBBFFFLRL', 'BBFFBBFRRL', 'FBFFFFBRRR', 'BFBFBBBRRL', 'BBFFBBBLRL', 'FBBFBFBRLL', 'FBFBBBFLLL', 'FFFFBBBLRR', 'FBBFBBFLLR', 'FBFFBBFLRL', 'FFBBFBFRRR', 'BFFBBBFLRL', 'FFFBBBFRRL', 'FFBBBFFLRL', 'BFBBFFBRLL', 'BFFBFFFLLL', 'FBFFFFBLRR', 'BFBFFBFLRL', 'FBBFFBFLLR', 'FBBFBBBRRL', 'BBFBFFFLLL', 'FBBBBFFLRR', 'FBBBFBBRRR', 'FFFBFFFLLR', 'BBFFBBFLRL', 'FFFFBFFRLL', 'BFBBBFFRRR', 'BFFFFBFRRL', 'BBFFBBBLLR', 'BFBBBBFRRR', 'BFBBBFFLLL', 'BBFBFFFLRL', 'BBBFFFBRRL', 'BBBBFFBRLL', 'FBFFFFFLRL', 'BFFFBBFLLR', 'FFFFBBFRRL', 'BBFFBFBLLR', 'BFFBBFFRRL', 'BBBFFBBLLL', 'BFFBFBFLLL', 'BFBFBFBRRL', 'BBFFFFBRRL', 'FBBBFBFRRR', 'FFBFBBFRLR', 'FFFBBBBLRR', 'FFBBFBBRRL', 'BBFBBFBRLL', 'FFBBBBBRLL', 'BFBBBBFLRR', 'FBFBBFBLLL', 'FBBFFFFRLL', 'BFFBFFFLRL', 'BBBFBBFLLL', 'BFBFBBBRRR', 'FBFBBFFLRL', 'FBBBFFFLLR', 'FBBBFFBLLR', 'BBFFBBFRLL', 'FBBFFBFLRL', 'BFFBBBFRRR', 'BFBBBBBRLL', 'FFBBBBFRLL', 'BBBFFFFLLL', 'BBFBFFBRRR', 'FBBBBFFLLL', 'BBBFFFFRRR', 'FBBFBFBLLL', 'BBBFBBFLRR', 'FFBFFBBRLL', 'FFBBFBFLLL', 'FBFFFFFRLL', 'FBFBFFBLRR', 'BBFFBBBRRL', 'BFFBBBFRRL', 'FFBBBFBRLL', 'FBBBBFBRRL', 'BBFBBBBRLR', 'BFFBFFBRRL', 'BBFBFBBRRL', 'FFFBFBFRLR', 'FFBBFBFRLR', 'FFFBBFBRLL', 'BFFFFBBRLL', 'FBFBBFBLLR', 'FBFFBBFLLL', 'BBFBFBBRLR', 'BBFBFBBLLL', 'FBBBFBBRRL', 'BFFFBBBRLR', 'BBFFBBBRRR', 'BFFBFFBLRL', 'BBFBFFBLLR', 'FFFFFFBRRL', 'BFBFBFFLLR', 'BBBBFFBLLL', 'FBBBFBFRRL', 'FBBFFBFLLL', 'FFBFBFFRLL', 'BFBBFFFLLL', 'FBFFFBBLRL', 'FFFBFFBLRL', 'BFFFBBBLRR', 'BBBFFBFRRL', 'FBBBFFFRLR', 'FFBBFFBRRR', 'FBBBBBBLLL', 'BFFBBFFLLR', 'FFFFFBBLLR', 'FBBFBFBRRR', 'BBBFBFFLLL', 'FFFFBBFRRR', 'FBFFFFBRLL', 'FFBBFFFLRR', 'FFFFFBBLRL', 'BBBBFFFLLL', 'FFFFBFBLLR', 'BBBBFFFRRR', 'FBBFBBFRRR', 'BFFBFFFRLR', 'FBFFBBFLRR', 'BFBBFBBRLR', 'BFFBBBFLLL', 'BFBFBBBLLL', 'BBFBBBFRRL', 'FBBFBBFRRL', 'FFFBFFFLRL', 'FBFFBFBLRR', 'FFBFFFFRLL', 'FFFFBBFLRR', 'BFBFFBFLRR', 'FBBFBBBRLR', 'BFBBBFFLRL', 'BBFBFBFRLR', 'FFFFFBBRRL', 'BBFFBFFLRR', 'FBBBFFBRLR', 'BBBFFBBRRL', 'FFFFFBBRLR', 'FFFBBFFRRL', 'FFBFFFFRLR', 'BFFBFBBLLR', 'BFBFBFFLLL', 'FFBFBBBLRL', 'BBFBBBBLRR', 'BFFFFFBRLR', 'BBFBFBBLLR', 'FBBBBFBRLL', 'BBFFBFBLRR', 'BBFBFBBRRR', 'BBBFBBBLLL', 'FBFBBBBRLL', 'BFFBFBBRLL', 'BFBBBBBRLR', 'BBFFFFBRLL', 'FBFBBBBRRR', 'FBBFFFBRRL', 'BFFBBFFLLL', 'BBFBBFBLRL', 'FBBFBBBLRR', 'FBBFBBFLLL', 'FFFFBBFLRL', 'BFFFBBBRLL', 'FFFBBBFLRL', 'BFFFBBFRLR', 'FFFFBBBLLR', 'FFFFBFFRLR', 'FFFFBBBRRR', 'BFBFBFBRRR', 'BBFFBBFRRR', 'FBBFBFFLLR', 'BFBBBFBRLL', 'BFBFFFFRLR', 'BFBFFFBLLR', 'BFBBBFBRRR', 'BFFBBBFRLL', 'FBFFBBFRLR', 'FBFBBFFLLL', 'FBFBFFFRLR', 'FFFBFBBLRR', 'FFBBBFFRRL', 'BBFBFFBLRL', 'FBBBBBFRLR', 'BBBFBFBLLR', 'FFFBBFFLRL', 'BFFBBFFLRR', 'BBFBFFFLRR', 'FFBFFFBRRR', 'BFFBBFBLRL', 'FFBBFFBRLL', 'BFBFFBFRLL', 'FFBFBFFRLR', 'FBFFFBFRLR', 'BFBBFBFRLL', 'BFFBFBFRRL', 'FFBBFFBRRL', 'FBFFFFBLLL', 'BFFFBBBLLL', 'FBBFBFFRRL', 'BFBFBBBRLL', 'FFFBFFFLLL', 'BFFFBFFRRL', 'FBBBBBFRLL', 'FFBFBBFRRR', 'FBFBFFFLLL', 'FFFBFBBRRR', 'BFBBFFFLRR', 'FFFFFBFLRR', 'FBFBFFBRLR', 'FBFFBBFLLR', 'BBBFFFBLLR', 'FBFFFBBRLL', 'BFFBFBBLRL', 'FFFFFFBRRR', 'FFBFBFBRLL', 'BBFBBFFLLR', 'BBBFFFFRLR', 'BFBFBFBLRL', 'FBFFBFBRLR', 'FBBFFFBRRR', 'BBFFFFFLRR', 'BFBFBFBLRR', 'BFBBBBBLLR', 'FFBFFBFRRR', 'FFFFBBBRLL', 'FBBBBBFLRR', 'FFBBFBFRLL', 'FBFBBFFLRR', 'FFBFBBBLLL', 'FBFFBFFRRL', 'BBBFFBBLRR', 'BFFFFFFRRL', 'FBFFBFFRLL', 'FBBBBFBRLR', 'FBBBFBFLRL', 'FBBBFFBLRL', 'FFBBFBBLLR', 'BBFFFBBRLR', 'BBBBFFBLLR', 'BFFFFBFLRR', 'BBFFBFFRLL', 'FFBFBFFRRR', 'BFFFFFFRLR', 'FFFFBFFLRL', 'BFBBFFFRLR', 'BBFFBFFLLL', 'FFFFFBFRRR', 'FFFBFBBLRL', 'BFFBBBBRRL', 'FBFBBFFLLR', 'FFFBBFFLLL', 'FFFFBFBLRL', 'BBFBFBBLRR', 'BBFFBFFLRL', 'BBBFFFBLRL', 'BFFBFBFRLL', 'FFFBFFFLRR', 'FBFFFBBRLR', 'BFFFBBFRRR', 'FBBBBBFLRL', 'BFFFBBBLLR', 'BFFFBBFLRL', 'BFFFFBFLLR', 'FBFFFBBLRR', 'FBBFFFBRLR', 'BBFFBFBLRL', 'BBFBFBFLLR', 'FBBBFBFRLR', 'FBFFFBFRRL', 'BFFFBFFLRR', 'FFFFBFBLRR', 'FBFFBFFLLL', 'FFBFFBBRLR', 'BBFBBBFLLL', 'FBFFBFBRRL', 'BFFBFFBRLL', 'BFBFFFFLRR', 'FFBFBBBRLR', 'BFFBFBBRRL', 'FBFBBBBLRR', 'BFFFFFBLLL', 'FBFFBFBRRR', 'FBFBBFFRLR', 'BFBFBBFLLL', 'BFBBBFFRRL', 'FFBBBFBLLR', 'FBBFFFBLRL', 'BFFFFFFLLR', 'FBFFFFBLRL', 'FFBBFFFLRL', 'FFBBBFBLRL', 'BFFFBFBLLR', 'BFFBBBFLRR', 'FBFFFBBRRR', 'FFBFFFBRLL', 'FBFBFBBLLR', 'BFBBBBFRLL', 'FBBBBFFRLL', 'BFBFFBFRRL', 'FBBBBFFRLR', 'FFBFFFFRRR', 'BFFFBBFLRR', 'BBFBFBFRLL', 'BFFBFFBRRR', 'FFFFFBFLLL', 'BFBFFFBRRL', 'BFFBBFBRRL', 'BFBBFFBRRL', 'FFFBBBBRLR', 'FFFBBBBLRL', 'BFBBBFFLLR', 'BFBFFFFRRR', 'BBBFBFFRRR', 'FFFBFFFRRR', 'FFFBFBBLLR', 'BBBFBFFRRL', 'BBFFBFFLLR', 'FFFBBFFLLR', 'FFFBFBBLLL', 'FBFBFBFLRL', 'FFFFFBBLLL', 'FBBBBBBRLR', 'FFBBFBFLRL', 'BFFFFBBRLR', 'BFFFBFBLLL', 'BBFBBBFRRR', 'FBBBFFBRRL', 'FFBFFBFLRL', 'FFBFFFFLRL', 'BBFFFFBLLL', 'BFBBFBBRLL', 'FFFFBFFRRR', 'BFFBFBBRLR', 'BFFBFBFLRR', 'BFFBBFBRLL', 'FBBBFBBLRR', 'FBFBFFFRLL', 'BFBFFFBRLL', 'FBBBBBFRRL', 'FBFBFBBRLL', 'FBBFFBBRRR', 'BFFFBBFRRL', 'BBFFFFFRRR', 'BFFBFBFLRL', 'BBBFFBBLRL', 'FFBFBBFLRR', 'BBFFFBFRLR', 'FBFBBBFRRR', 'BBFBBBBRLL', 'FBFFBFFRLR', 'BFBBBFFRLR', 'FBFFBBBLRR', 'BFBFFBFRRR', 'FFBFFBFRRL', 'FFBBBBBLLL', 'BBFBBBFRLL', 'BFBBFBBLLL', 'BFBBBFBLRL', 'FBBBFBFLLL', 'FBBFBFFLRL', 'FBFBFBFLLL', 'BBFFBBFRLR', 'FBFBBBFLRL', 'BBFBBFBLRR', 'FFFFBFFLLL', 'FFFBBBBRRL', 'BBBFBBBRLL', 'BBFFFFFLLR', 'FBBFFBBRLR', 'FBBFBBFRLR', 'BFFFBFBLRL', 'BFFFFBBRRR', 'FBFFFFFLLR', 'FBBFBBFLRL', 'BBFFFBFRRR', 'BBBFFBFLLR', 'BFFBBFBRLR', 'BBFBFFFRLL', 'FFFBBFBLRR', 'BBBFBFFLLR', 'FBFFBFBLRL', 'FBBFBFFLRR', 'FBBBFFFLRR', 'FBBFBBBRRR', 'BBFFFBFRLL', 'FFBFBBFLRL', 'FBBFFFBLLR', 'BFFFFBFRRR', 'BBFBBFFRLL', 'FFBFBBBLRR', 'BFBFFFBLRL', 'FBBFFBFRRL', 'FFFFBBBRRL', 'FFFBBFBRRR', 'FFFBBBFRLL', 'BBFFBBFLLR', 'FFBFBFFRRL', 'BFBFFFBRLR', 'FFBBBFFRLL', 'FFFFBBFLLL', 'BFFFFFBLLR', 'FBBFFFFRRR', 'FFFFFFBLRL', 'BBFBFFFLLR', 'BBBFBFFLRL', 'BBBFFFFRLL', 'BBFFFFBRLR', 'FBFBBFFRRL', 'FFFFFBFLLR', 'BFFFBFBRLR', 'BFFFFFFRRR', 'FBFBFBBRLR', 'BBBBFFFRLR', 'FBBFBFBLRL', 'BBFFBFFRRR', 'BFFBBBBRLR', 'BBBBFFBLRR', 'BFBBFBBRRL', 'BFFFFBBLLL', 'BFFFBFBRLL', 'FBBFFFFLLR', 'BFBBFFFRLL', 'BBFBBBFRLR', 'FBFBFBFRRR', 'BFBFBFFLRR', 'BBFBBBBRRL', 'BFFFBFFRLR', 'BBBFBFBLLL', 'FBFBFFFRRL', 'FBBBFFFRLL', 'FBFBBFBRRR', 'FBFFFFFRRR', 'FBBBBBBRRL', 'BBBBFFFLLR', 'BFFFBFFLLR', 'BFBBFBBLRL', 'BBBFFFBRLR', 'FFFBBFBLRL', 'BFBFBFFRRR', 'BBFFFBBLLR', 'FBFBBFFRLL', 'FFFBBBFRLR', 'BFFFFBFRLL', 'FFBBFBBRLL', 'FFFBFFBRRL', 'BBBBFFFRLL', 'FBFFBBBRLL', 'FFBFBFFLLL', 'BBBFBBFLRL', 'FBFBBFBLRL', 'FFBFBFFLRR', 'FFFBFFBLLR', 'FBBFBFFRRR', 'FFBFBFBLLR', 'FFFFFFBLLR', 'BBBFFFFLRR', 'BBFBBFFRLR', 'FFFFBBBLLL', 'FBBFFFBLRR', 'BFFFFBFLLL', 'BFBBBFBLRR', 'FBFFFBFLLR', 'FBFBBFBRRL', 'BFBFBBFRRR', 'FBFBFFFLRR', 'FFBFFBFLLR', 'FBFBFBFRRL', 'FFFBBBFLRR', 'FFFBBBBLLR', 'BBBFBBFRRR', 'BFFBBBBLRR', 'BBBFFBFLRR', 'FFBBBFFRRR', 'FBFFBFFRRR', 'BFFFFBBLRR', 'BFFBFFFRLL', 'BFFBFFBLRR', 'FBBBFBBRLR', 'BFBFFBBRLR', 'FBFFBBFRRR', 'FFBBBFFRLR', 'BBFFFFFRRL', 'BFFBBBBLRL', 'FBBFFFFLRR', 'FFBFBBFLLL', 'BFFFBBBRRR', 'BBFFFFBLRR', 'FFFFBFBLLL', 'FBFFBFFLRR', 'BFBFBFFLRL', 'BBFFFFFRLR', 'BBBFFBBRLR', 'BBFFBFBRRR', 'FBFFBBBLLR', 'BBFBFBFRRR', 'BFBBFBFRRR', 'BFFFBBBLRL', 'BFBBFBBLRR', 'BBBFBBBRRR', 'FFFBBFBRRL', 'FFBFFFBRRL', 'FFBFBFBLRL', 'BFFFFFBRRR', 'BFBFBBBLLR', 'BFFFBFFRRR', 'FBFBFFFLRL', 'BFBBBBBRRR', 'FFFBFBFLRL', 'FFFFBFFRRL', 'FBFBFBBLLL', 'FFFFBBBRLR', 'FBBFBBBLRL', 'BFBBFBBRRR', 'FFFBFBFLRR', 'BBBBFFBRRL', 'FFBBFBFLLR', 'FFFBFBBRLR', 'BBFFFBFLRL', 'FFBBBFBRRL', 'FFBFBBBRRR', 'BFBBBBFLLR', 'BBFBBBFLRL', 'BFBBFBBLLR', 'BBFFFBBLRR', 'FFBBFFBLRL', 'BBBFFFFRRL', 'BFFFBFFRLL', 'BBBBFFFLRR', 'FFBBBBFLRR', 'FBBFFBFLRR', 'BBBFFFFLLR', 'BFFBFFFRRL', 'FBFBFBBLRL', 'BFBFFBFLLR', 'BFFBFBFLLR', 'BFBFFFBRRR', 'FFBBFFFRRL', 'BBFBBFBLLL', 'FBBBFBFRLL', 'BBFBBBFLRR', 'BBBFFFBLRR', 'BBFFFFBLLR', 'FBBFBFFRLR', 'FBFBFFBLLL', 'BFFBBBFRLR', 'BFFFFBBRRL', 'BBBFFBFLLL', 'FFFBFBFRRR', 'FBFFBFFLRL', 'FFBBBBBLLR', 'BFFBBFBRRR', 'FBBBBFBLRL', 'BFBFBBBRLR', 'BBFBBFFLLL', 'BFFFFFBLRL', 'FBBFBFBRRL', 'FBBBFFFLLL', 'BFFFBFBRRR', 'FFBFBFFLRL', 'FFBFBFBRRL', 'FFBBBBBRRR', 'FFFFBFBRLR', 'BFBBFFBLLL', 'BFFBBBFLLR', 'FBBBFFBRLL', 'FBFFBBBLRL', 'BFFBBBBRRR', 'FFBFFBBRRL', 'BFBFFBBRLL', 'FFFFFBFLRL', 'FFBBBBFRRR', 'FFBFFFFLLR', 'BBBFBBBRRL', 'FFFFFBBRLL', 'FBFBBBBRRL', 'FBBBFBFLRR', 'FFFBBFFLRR', 'FBFFFBFLRL', 'FFBFFBFRLL', 'FFFBFFFRRL', 'FFFFBFBRLL', 'BBFBFBBRLL', 'FFBBBBFLLR', 'FBFFFBBRRL', 'BFBBBBBLLL', 'BFBFFBBLLL', 'FFFFBFBRRL', 'FFBBFFBLRR', 'BFBBFFFRRR', 'FFBFFBFRLR', 'BBFBBBBLRL', 'FBBFBBBLLR', 'BFFFBBFLLL', 'FFFFBFFLLR', 'BFFFFBFRLR', 'FBBFBFBLRR', 'BBBFFFFLRL', 'BBFFFBBLRL', 'BBFBFFBRLL', 'FBBBBFBLLR', 'FBFFBBFRLL', 'BBFFBFBLLL', 'FBBFFFBRLL', 'BBBFBFBRRL', 'FBFBBFBRLR', 'BFBBBBFLLL', 'FBFBFBFRLL', 'FBFBBBFLLR', 'BBFBFBFLLL', 'BBFFFBFLLL', 'BBBFFFBLLL', 'BFBBBFBLLL', 'FFBBBFFLLL', 'FFBFFFFRRL', 'FBBBBBFLLR', 'FBBFFBBLRR', 'BBFFFFFRLL', 'FFFFFBBLRR', 'BFBBFFBLRL', 'BFFFFFBRRL', 'BFBBFFFLLR', 'FFFBFBBRRL', 'FFBFFBBLRL', 'BFFFFBBLRL', 'FBFBBBBLRL', 'FBBBFFBRRR', 'FFBBFBBRLR', 'BFBBFFBLRR', 'FBBBFFBLRR', 'FBFBFFBRLL', 'FBFBFBFLLR', 'BBFFFBBRRL', 'BBBFBFBRLL', 'BBFBBFFRRR', 'BFBBFFFLRL', 'BFBFBFFRRL', 'BBFBBFFLRL', 'BBFBFBFLRR', 'BBFBFFFRRR', 'BBBFFBFRLR', 'BFFBBFFLRL', 'FBBBBBBRLL', 'BBFFFBBLLL', 'FFFBBBBLLL', 'BBFFFFBLRL', 'FFBBFFBRLR', 'BFBBBBBLRR', 'BBFBBFBRRR', 'FFFFFFBRLR', 'FFFFBBFRLL', 'FFFFBBFRLR', 'FBFBBFFRRR', 'FFFFBFBRRR', 'FBFBFBBRRR', 'FFFFFBBRRR', 'BFBBBBBLRL', 'BBBFBBFLLR', 'BFBFFBBRRL', 'BBBFFFBRLL', 'BBFBBBBRRR', 'FBFBBBFRRL', 'BFBBFBFLLL', 'FFFBBFBLLL', 'BBFFBFBRRL', 'FFBFFBBLLR', 'FFBFBBFLLR', 'BBBFBBFRLL', 'FBBFFFFRRL', 'FBBFFBFRRR', 'BFFBFFBLLL', 'FBFBFFBLRL', 'BBBFBBFRLR', 'FFBFBBBRRL', 'FFBBBBFLLL', 'FBFBBBFLRR', 'FFBBFBFLRR', 'FBFFBBFRRL', 'FFBBFFFLLR', 'FBFBFBBLRR', 'BBBFBBBRLR', 'BFFBFFFLLR', 'BFFFBFBRRL', 'FFBBBFBRRR', 'BFFBFFFRRR', 'BBBFBFFLRR', 'FFFFFFBLRR', 'BFBFBBFRRL', 'FBFBBFBRLL', 'FBBBBFFLLR', 'BFBBBBFLRL', 'FBBBBFBLLL', 'FFBBFFBLLR', 'BBBFFBBRRR', 'BFBFFFFRRL', 'FFBFFBBRRR', 'BFFBBFFRRR', 'FBFFBFFLLR', 'BBFFFFFLLL', 'BBBBFFBLRL', 'BFBBBBFRRL', 'FBBFBFFLLL', 'FFFFFBFRLL', 'FBBBBBFRRR', 'BBBFBFFRLL', 'BFBBBFFRLL', 'FFBBBFFLRR', 'BBFFFBFLRR', 'BBFFFBFRRL', 'BBFBFFBRLR', 'FFBFFFBLRR', 'FBFBFBBRRL', 'FFFBBFFRRR', 'FBBBBBBLLR', 'FBBFFBBLLL', 'FBBBBFFRRL', 'BFBFFFFLRL', 'BFBBBFBLLR', 'FFFBFFBRLL', 'FBFBBFBLRR', 'FFBBFBBLRR', 'BBBFBBBLRR', 'BBFBBBFLLR', 'BFBFBBBLRR', 'BFBFBBFLRL', 'FFFBBBBRRR', 'BFBFFBBRRR', 'FBBBBFFRRR', 'FFFBBFBRLR', 'FBFFFBFRLL', 'BFBFFBBLRL', 'FFBFBBFRRL', 'BFFFFFFLLL', 'BFBFFFFLLL', 'BBFFBFFRRL', 'BFFBBFFRLR', 'FFFBFFBLLL', 'BBFBFFBLLL', 'FBFFBBBRLR', 'FBBBBFFLRL', 'FBFFBBBRRR', 'BFFBBFBLLL', 'BFBFBFBLLR', 'FBFFFFBRLR', 'BBFFFBBRRR', 'BFBBFFBLLR', 'FFFBFBBRLL', 'BBFFFFBRRR', 'BFFBBFBLRR', 'FBFBFBFRLR', 'FBFFFBFLRR', 'FFBBBBBRRL', 'FBFFBBBRRL', 'BBBFFFBRRR', 'FBFFFFBLLR', 'BBFBFBFRRL', 'BBFBFFFRLR', 'BFFFFBFLRL', 'BBBBFFFRRL', 'FBBFBBFRLL', 'BFBFBFBLLL', 'FBBBBBBLRR', 'FFBBBBBLRR', 'BFFBBFFRLL', 'FFFFBBFLLR', 'FFBBFFBLLL', 'FFBFBBFRLL', 'BBBFBFBRRR', 'BFBBFBFRLR', 'FFBBFFFRLL', 'FBFFFBFLLL', 'FFBFFBBLRR', 'BFBFBBFLRR', 'FBBFFBFRLR', 'BBBFBFBLRR', 'BBFFBBBLLL', 'FFFBBBFRRR', 'BFFBBBBLLL', 'FFFBBFBLLR', 'BFBBBBFRLR', 'FBFFBFBRLL', 'FFBFFBFLRR', 'FFFBFFBRLR', 'BFBFFBFRLR', 'BFBBBFFLRR', 'BFBBFBFLLR', 'BBFBBFBRRL', 'FBFBFFBRRR', 'BFBBFFBRRR', 'BBFBFFBLRR', 'FBFFFFBRRL', 'FFFBBBBRLL', 'FFBBFFFLLL', 'BFBFBBFLLR', 'FBBBFBBLLL', 'BBFFBBFLRR', 'FBFFFFFRRL', 'BFBFFBBLLR', 'FBBFFBBLLR', 'BBBFBFBRLR', 'BFFFFFFLRR', 'BBFFBFBRLR', 'FBBFFBBRRL', 'BFFFFBBLLR', 'BBFBBFBRLR', 'FFBBBBFRRL', 'BFFBBBBLLR', 'FFBBFBBLRL', 'BFBFFFFRLL', 'BFFFBBFRLL', 'BFBFBBFRLR', 'BBFFBBFLLL', 'FFBBBFBLRR', 'FBFFBBBLLL', 'FFBFFFBLLL', 'FBBFFFBLLL', 'FFBBBBBLRL', 'FBBFFBFRLL', 'FFFBBBFLLR', 'BBBFBBBLRL', 'BFFBFFBLLR', 'BFBFBBBLRL', 'FFBFFFBRLR', 'BBBFFBFRRR', 'BFFBFBFRLR', 'FFBBBBFLRL', 'FBBFBBFLRR', 'FBBBFFFRRR', 'FBFBFFFRRR', 'FFFBFFFRLR', 'BFBBFBFLRR', 'FFBFFBBLLL', 'FFBFFFFLLL', 'FBFFBFBLLL', 'BFBFFFBLRR', 'FBFFFFFRLR', 'BBFBFBBLRL', 'FFBFBFBRRR', 'FFBFFFBLRL', 'FFBBFBBRRR', 'BBFFBFBRLL', 'FFFBFBFRRL', 'FFBFFFBLLR', 'FFFBFFFRLL', 'FFBFBFBLLL', 'FFFBFFBRRR', 'BBBFFBFRLL', 'FFBFBFFLLR', 'BBBFFBFLRL', 'FBFBBBBLLR', 'FBBFBFBLLR', 'FFBBFBBLLL', 'BFFBFFFLRR', 'BBFFBBBLRR', 'FBBFBBBRLL', 'FBFBBBFRLR', 'BFFFBBBRRL', 'BFBBFFBRLR', 'FBBBFFFRRL', 'BFBFFBFLLL', 'FBBBFBBLRL', 'FBFBBBBLLL', 'FBFFBFBLLR', 'FFBBFBFRRL', 'BFFBBBBRLL', 'BBBFFBBLLR', 'BBFBFFBRRL', 'FFFFFFBLLL', 'BFBBBFBRLR', 'BFFFBFFLLL'];

function getSeatPair(string) {
  let rowStringSplit = string.substring(0, 6);
  let colStringSplit = string.substring(7);
  let seat = [];

  seat.push(findRow(rowStringSplit));
  seat.push(findCol(colStringSplit));
  return seat;
}

function findRow(rowString) { return tree(rowString, 128);}
function findCol(colString) { return tree(colString, 8); }

function tree(string, startNumber){
  let test = string;
  let start = startNumber;
  let end = 0;

  for (let i = 0; i < test.length; i++) {
  let mid = Math.floor((start + end)/2);
    let currentChar = test.charAt(i);
    if(currentChar == 'F' || currentChar == 'L') {
      start = mid;
      end = end;
    } else {
      start = start;
      end = mid;
    }
  }
  return end;
}

function getSeatId(seatRow, seatColumn) {
  let id = 0;
  let row = seatRow;
  let column = seatColumn;

  id = row * 8 + column;
  return id;
}

function scan(data) {
  const seatIds = data.map(string => getSeatPair(string));
  return seatIds;
}

// function test(a, b) { let num = a; let max = b; return num;}
// function numberSort(toSort) {toSort.sort(function(a, b) { return a - b;}); }

// function getMissingSeats(seatRowCol) {
//   const rows = seatRowCol.map(el => test(el[0],127));
//   const cols = seatRowCol.map(el => test(el[1], 7));
//   let rowSet = [...new Set(rows)];
//   let colSet = [...new Set(cols)];
// 
//   numberSort(rowSet);
//   numberSort(colSet);
// 
//   console.log('rowSet: ', rowSet, 'colSet', colSet);
// }

function makeSeatGrid(){
  let rows = 128;
  let cols = 8;
  let grid = [];

  for (let i = 0; i < rows; i++) {
    for (let j = 0; j < cols; j++) {
      let seatAdd = [i, j];
      grid.push(seatAdd);
    }
  }
  return grid;
}

function compare(planeGrid, takenSeats) {
  let filteredSeats = planeGrid;
  let gridSize = planeGrid.length;
  console.log(gridSize);

  for (let i = 0; i < gridSize; i++) {
    planeGrid.forEach(function(line, index) {
      takenSeats.forEach(el => {
        if (line[0] == el[0] && line[1] == el[1]) { //remove line from filteredSeats
          filteredSeats.splice(index, 1);
        }
      });
    });
  }
  console.log(filteredSeats);
  return filteredSeats;
}

function sanityCheck(grid, takenSeats) {
  console.log('length of grid', grid.length,'length of takeSeats', takenSeats.length);
  if (grid.length != takenSeats.length){
    console.log('This is were I realized mistakes were made.');
  }
}


let takenSeats = scan(data);
let grid = makeSeatGrid();
sanityCheck(grid, takenSeats);
//      let grid=[[0,0],[0,1],[0,2],[0,3],[0,4],[0,5],[0,6],[0,7],[1,2], [1,3], [1,4], [1,5], [1,6] ];
//let takenSeats=[[0,0],[0,1],      [0,3],      [0,5],[0,6],[0,7],[1,2],        [1,4],        [7,6] ];
//should be [0,2], [0,4]
//compare(grid, takenSeats);
